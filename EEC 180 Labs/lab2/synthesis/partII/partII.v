
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module partII(

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [7:0] product;


//=======================================================
//  Structural coding
//=======================================================

	multiplier_4x4 test_unit
	(
		.a(SW[7:4]),
		.b(SW[3:0]),
		.p(product)
	);

    hex_7seg_decoder A
    (
        .bin(SW[7:4]),
        .segs(HEX3)
    );

    hex_7seg_decoder B
    (
        .bin(SW[3:0]),
        .segs(HEX2)
    );

    hex_7seg_decoder first
    (
        .bin(product[3:0]),
        .segs(HEX0)
    );

    hex_7seg_decoder second
    (
        .bin(product[7:4]),
        .segs(HEX1)
    );

assign HEX4 [7:0] = 8'b11111111;
assign HEX5 [7:0] = 8'b11111111;

always @(*) begin
    $display("SW: A=%b, B=%b => Product=%b", SW[7:4], SW[3:0], product);
end

endmodule
