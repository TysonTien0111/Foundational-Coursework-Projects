|partII
HEX0[0] << hexDisplay:sqrtDisplay.x
HEX0[1] << hexDisplay:sqrtDisplay.x
HEX0[2] << hexDisplay:sqrtDisplay.x
HEX0[3] << hexDisplay:sqrtDisplay.x
HEX0[4] << hexDisplay:sqrtDisplay.x
HEX0[5] << hexDisplay:sqrtDisplay.x
HEX0[6] << hexDisplay:sqrtDisplay.x
HEX0[7] << hexDisplay:sqrtDisplay.x
HEX1[0] << hexDisplay:lowerNibbleDisplay.x
HEX1[1] << hexDisplay:lowerNibbleDisplay.x
HEX1[2] << hexDisplay:lowerNibbleDisplay.x
HEX1[3] << hexDisplay:lowerNibbleDisplay.x
HEX1[4] << hexDisplay:lowerNibbleDisplay.x
HEX1[5] << hexDisplay:lowerNibbleDisplay.x
HEX1[6] << hexDisplay:lowerNibbleDisplay.x
HEX1[7] << hexDisplay:lowerNibbleDisplay.x
HEX2[0] << hexDisplay:upperNibbleDisplay.x
HEX2[1] << hexDisplay:upperNibbleDisplay.x
HEX2[2] << hexDisplay:upperNibbleDisplay.x
HEX2[3] << hexDisplay:upperNibbleDisplay.x
HEX2[4] << hexDisplay:upperNibbleDisplay.x
HEX2[5] << hexDisplay:upperNibbleDisplay.x
HEX2[6] << hexDisplay:upperNibbleDisplay.x
HEX2[7] << hexDisplay:upperNibbleDisplay.x
HEX3[0] << <VCC>
HEX3[1] << <VCC>
HEX3[2] << <VCC>
HEX3[3] << <VCC>
HEX3[4] << <VCC>
HEX3[5] << <VCC>
HEX3[6] << <VCC>
HEX3[7] << <VCC>
HEX4[0] << <VCC>
HEX4[1] << <VCC>
HEX4[2] << <VCC>
HEX4[3] << <VCC>
HEX4[4] << <VCC>
HEX4[5] << <VCC>
HEX4[6] << <VCC>
HEX4[7] << <VCC>
HEX5[0] << <VCC>
HEX5[1] << <VCC>
HEX5[2] << <VCC>
HEX5[3] << <VCC>
HEX5[4] << <VCC>
HEX5[5] << <VCC>
HEX5[6] << <VCC>
HEX5[7] << <VCC>
KEY[0] => clk.IN2
KEY[1] => rstn.IN1
LEDR[0] << squareRoot:sqrtModule.done
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
SW[0] => nextState.IN1
SW[0] => prevState.DATAIN
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~


|partII|ram16x8:ramModule
addr[0] => memory.waddr_a[0].DATAIN
addr[0] => memory.WADDR
addr[0] => memory.RADDR
addr[1] => memory.waddr_a[1].DATAIN
addr[1] => memory.WADDR1
addr[1] => memory.RADDR1
addr[2] => memory.waddr_a[2].DATAIN
addr[2] => memory.WADDR2
addr[2] => memory.RADDR2
addr[3] => memory.waddr_a[3].DATAIN
addr[3] => memory.WADDR3
addr[3] => memory.RADDR3
mdi[0] => memory.data_a[0].DATAIN
mdi[0] => memory.DATAIN
mdi[1] => memory.data_a[1].DATAIN
mdi[1] => memory.DATAIN1
mdi[2] => memory.data_a[2].DATAIN
mdi[2] => memory.DATAIN2
mdi[3] => memory.data_a[3].DATAIN
mdi[3] => memory.DATAIN3
mdi[4] => memory.data_a[4].DATAIN
mdi[4] => memory.DATAIN4
mdi[5] => memory.data_a[5].DATAIN
mdi[5] => memory.DATAIN5
mdi[6] => memory.data_a[6].DATAIN
mdi[6] => memory.DATAIN6
mdi[7] => memory.data_a[7].DATAIN
mdi[7] => memory.DATAIN7
mwr => memory.we_a.DATAIN
mwr => memory.WE
clk => memory.we_a.CLK
clk => memory.waddr_a[3].CLK
clk => memory.waddr_a[2].CLK
clk => memory.waddr_a[1].CLK
clk => memory.waddr_a[0].CLK
clk => memory.data_a[7].CLK
clk => memory.data_a[6].CLK
clk => memory.data_a[5].CLK
clk => memory.data_a[4].CLK
clk => memory.data_a[3].CLK
clk => memory.data_a[2].CLK
clk => memory.data_a[1].CLK
clk => memory.data_a[0].CLK
clk => mdo[0]~reg0.CLK
clk => mdo[1]~reg0.CLK
clk => mdo[2]~reg0.CLK
clk => mdo[3]~reg0.CLK
clk => mdo[4]~reg0.CLK
clk => mdo[5]~reg0.CLK
clk => mdo[6]~reg0.CLK
clk => mdo[7]~reg0.CLK
clk => memory.CLK0
mdo[0] <= mdo[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mdo[1] <= mdo[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mdo[2] <= mdo[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mdo[3] <= mdo[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mdo[4] <= mdo[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mdo[5] <= mdo[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mdo[6] <= mdo[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mdo[7] <= mdo[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|partII|squareRoot:sqrtModule
clk => sqrtCounterReg[0].CLK
clk => sqrtCounterReg[1].CLK
clk => sqrtCounterReg[2].CLK
clk => sqrtCounterReg[3].CLK
clk => subtrahendReg[0].CLK
clk => subtrahendReg[1].CLK
clk => subtrahendReg[2].CLK
clk => subtrahendReg[3].CLK
clk => subtrahendReg[4].CLK
clk => minuendReg[0].CLK
clk => minuendReg[1].CLK
clk => minuendReg[2].CLK
clk => minuendReg[3].CLK
clk => minuendReg[4].CLK
clk => minuendReg[5].CLK
clk => minuendReg[6].CLK
clk => minuendReg[7].CLK
clk => currentState~1.DATAIN
rstn => sqrtCounterReg[0].ACLR
rstn => sqrtCounterReg[1].ACLR
rstn => sqrtCounterReg[2].ACLR
rstn => sqrtCounterReg[3].ACLR
rstn => subtrahendReg[0].ACLR
rstn => subtrahendReg[1].ACLR
rstn => subtrahendReg[2].ACLR
rstn => subtrahendReg[3].ACLR
rstn => subtrahendReg[4].ACLR
rstn => minuendReg[0].ACLR
rstn => minuendReg[1].ACLR
rstn => minuendReg[2].ACLR
rstn => minuendReg[3].ACLR
rstn => minuendReg[4].ACLR
rstn => minuendReg[5].ACLR
rstn => minuendReg[6].ACLR
rstn => minuendReg[7].ACLR
rstn => currentState~3.DATAIN
st => nextState.OUTPUTSELECT
st => nextState.OUTPUTSELECT
st => nextState.OUTPUTSELECT
st => load.DATAB
st => done.DATAB
st => nextState.OUTPUTSELECT
st => nextState.OUTPUTSELECT
st => nextState.OUTPUTSELECT
n[0] => minuendReg.DATAB
n[1] => minuendReg.DATAB
n[2] => minuendReg.DATAB
n[3] => minuendReg.DATAB
n[4] => minuendReg.DATAB
n[5] => minuendReg.DATAB
n[6] => minuendReg.DATAB
n[7] => minuendReg.DATAB
done <= done.DB_MAX_OUTPUT_PORT_TYPE
sqrt[0] <= sqrtCounterReg[0].DB_MAX_OUTPUT_PORT_TYPE
sqrt[1] <= sqrtCounterReg[1].DB_MAX_OUTPUT_PORT_TYPE
sqrt[2] <= sqrtCounterReg[2].DB_MAX_OUTPUT_PORT_TYPE
sqrt[3] <= sqrtCounterReg[3].DB_MAX_OUTPUT_PORT_TYPE


|partII|hexDisplay:upperNibbleDisplay
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
b => x.IN0
b => x.IN0
b => x.IN1
b => x.IN1
b => x.IN1
b => x.IN0
b => x.IN0
b => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
x[0] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= <VCC>


|partII|hexDisplay:lowerNibbleDisplay
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
b => x.IN0
b => x.IN0
b => x.IN1
b => x.IN1
b => x.IN1
b => x.IN0
b => x.IN0
b => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
x[0] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= <VCC>


|partII|hexDisplay:sqrtDisplay
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
a => x.IN0
b => x.IN0
b => x.IN0
b => x.IN1
b => x.IN1
b => x.IN1
b => x.IN0
b => x.IN0
b => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
c => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
d => x.IN1
x[0] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= <VCC>


